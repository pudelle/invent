import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";
import font from "./fonts/Roboto-Regular-normal.js"; // –ü–æ–¥–∫–ª—é—á—ë–Ω –∫–∞–∫ VFS

const PDFGenerator = (cartItems, userName, projectName, deliveryDate, returnDate) => {
  try {
    if (!Array.isArray(cartItems) || cartItems.length === 0) {
      alert("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã");
      return;
    }

    const doc = new jsPDF();

    // üî• –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —à—Ä–∏—Ñ—Ç–∞
    doc.addFileToVFS("Roboto-Regular.ttf", font); // –ó–∞–≥—Ä—É–∂–∞–µ–º —à—Ä–∏—Ñ—Ç
    doc.addFont("Roboto-Regular.ttf", "Roboto", "normal"); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç
    doc.setFont("Roboto", "normal"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à—Ä–∏—Ñ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    // üî• –ó–∞–≥–æ–ª–æ–≤–æ–∫
    doc.setFontSize(16);
    const title = "–ü–æ–∑–∏—Ü–∏–∏ –Ω–∞ –æ—Ç–≥—Ä—É–∑–∫—É";
    console.log("–ó–∞–≥–æ–ª–æ–≤–æ–∫:", title); // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    doc.text(title, 14, 20);

    // üî• –¢–∞–±–ª–∏—Ü–∞
    const headers = [["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ö–æ–ª-–≤–æ"]];
    const data = cartItems.map((item) => [
      String(item.id ?? ""),
      String(item.name ?? ""),
      String(item.quantity ?? ""),
    ]);

    autoTable(doc, {
      head: headers,
      body: data,
      startY: 30,
      headStyles: {
        fillColor: [78, 92, 128], // RGB-—Ü–≤–µ—Ç –¥–ª—è —Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∏–Ω–∏–π)
        textColor: [255, 255, 255], // RGB-—Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–µ–ª—ã–π)
        fontStyle: "bold", // –°—Ç–∏–ª—å —Ç–µ–∫—Å—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∂–∏—Ä–Ω—ã–π)
      },
      styles: { font: "Roboto" }, // –£–∫–∞–∑—ã–≤–∞–µ–º —à—Ä–∏—Ñ—Ç –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
    });

    // üî• –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    const endY = doc.autoTable.previous.finalY || 40;

    const footerData = [
      `–ó–∞–∫–∞–∑–∞–ª: ${userName || "-"}`,
      `–ü—Ä–æ–µ–∫—Ç: ${projectName || "-"}`,
      `–°—Ä–æ–∫: ${deliveryDate || "-"} ‚Äî ${returnDate || "-"}`,
    ];

    doc.setFontSize(12);
    footerData.forEach((line, index) => {
      console.log(`–¢–µ–∫—Å—Ç –≤–Ω–∏–∑—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã (${index + 1}):`, line); // –õ–æ–≥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
      doc.text(line, 14, endY + 10 + index * 10);
    });

    // üî• –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ PDF
    doc.save("order.pdf");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ PDF:", error);
    alert("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å PDF");
  }
  
};

export default PDFGenerator;